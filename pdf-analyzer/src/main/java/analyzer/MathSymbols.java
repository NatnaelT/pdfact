package analyzer;

import java.util.HashSet;

/**
 * Class of math symbols.
 * 
 * @author Claudius Korzen
 *
 */
public class MathSymbols {

  public static final HashSet<String> MATH_SYMBOLS = new HashSet<String>();

  static {
    // Basic symbols
    MATH_SYMBOLS.add("+");
    MATH_SYMBOLS.add("‚àí");
    MATH_SYMBOLS.add("¬±");
    MATH_SYMBOLS.add("‚àì");
    MATH_SYMBOLS.add("√ó");
    MATH_SYMBOLS.add("‚ãÖ");
    MATH_SYMBOLS.add("¬∑");
    MATH_SYMBOLS.add("√∑");
    MATH_SYMBOLS.add("/");
    MATH_SYMBOLS.add("‚ÅÑ");
    MATH_SYMBOLS.add("‚àö");
    MATH_SYMBOLS.add("‚àë");
    MATH_SYMBOLS.add("‚à´");
    MATH_SYMBOLS.add("‚àÆ");
    MATH_SYMBOLS.add("‚à¥");
    MATH_SYMBOLS.add("‚àµ");
    MATH_SYMBOLS.add("¬¨");
    MATH_SYMBOLS.add("Àú");
    MATH_SYMBOLS.add("‚àù");
    MATH_SYMBOLS.add("‚àû");
    MATH_SYMBOLS.add("‚ñ†");
    MATH_SYMBOLS.add("‚ñ°");
    MATH_SYMBOLS.add("‚àé");
    MATH_SYMBOLS.add("‚ñÆ");
    MATH_SYMBOLS.add("‚Ä£");

    // Digits
    MATH_SYMBOLS.add("1");
    MATH_SYMBOLS.add("2");
    MATH_SYMBOLS.add("3");
    MATH_SYMBOLS.add("4");
    MATH_SYMBOLS.add("5");
    MATH_SYMBOLS.add("6");
    MATH_SYMBOLS.add("7");
    MATH_SYMBOLS.add("8");
    MATH_SYMBOLS.add("9");
    MATH_SYMBOLS.add("0");
    
    // Symbols based on equality.
    MATH_SYMBOLS.add("=");
    MATH_SYMBOLS.add("‚â†");
    MATH_SYMBOLS.add("‚âà");
    MATH_SYMBOLS.add("~");
    MATH_SYMBOLS.add("‚â°");
    MATH_SYMBOLS.add("‚âú");
    MATH_SYMBOLS.add("‚âù");
    MATH_SYMBOLS.add("‚âê");
    MATH_SYMBOLS.add("‚âÖ");
    MATH_SYMBOLS.add("‚â°");
    MATH_SYMBOLS.add("‚áî");
    MATH_SYMBOLS.add("‚Üî");

    // Symbols that point left or right
    MATH_SYMBOLS.add("<");
    MATH_SYMBOLS.add(">");
    MATH_SYMBOLS.add("‚â™");
    MATH_SYMBOLS.add("‚â´");
    MATH_SYMBOLS.add("‚â§");
    MATH_SYMBOLS.add("‚â•");
    MATH_SYMBOLS.add("‚â¶");
    MATH_SYMBOLS.add("‚âß");
    MATH_SYMBOLS.add("‚â∫");
    MATH_SYMBOLS.add("‚âª");
    MATH_SYMBOLS.add("‚óÖ");
    MATH_SYMBOLS.add("‚ñª");
    MATH_SYMBOLS.add("‚áí");
    MATH_SYMBOLS.add("‚Üí");
    MATH_SYMBOLS.add("‚äÉ");
    MATH_SYMBOLS.add("‚äÜ");
    MATH_SYMBOLS.add("‚äÇ");
    MATH_SYMBOLS.add("‚äá");
    MATH_SYMBOLS.add("‚äÉ");
    MATH_SYMBOLS.add("‚Üí");
    MATH_SYMBOLS.add("‚Ü¶");
    MATH_SYMBOLS.add("‚äß");
    MATH_SYMBOLS.add("‚ä¢");

    // Brackets
    MATH_SYMBOLS.add("{");
    MATH_SYMBOLS.add("}");
    MATH_SYMBOLS.add("‚åä");
    MATH_SYMBOLS.add("‚åã");
    MATH_SYMBOLS.add("‚åà");
    MATH_SYMBOLS.add("‚åâ");
    MATH_SYMBOLS.add("[");
    MATH_SYMBOLS.add("]");
    MATH_SYMBOLS.add("(");
    MATH_SYMBOLS.add(")");
    MATH_SYMBOLS.add("‚ü®");
    MATH_SYMBOLS.add("‚ü©");
    MATH_SYMBOLS.add("|");

    // Other non-letter symbols
    MATH_SYMBOLS.add("*");
    MATH_SYMBOLS.add("‚àù");
    MATH_SYMBOLS.add("‚àñ");
    MATH_SYMBOLS.add("‚à§");
    MATH_SYMBOLS.add("‚à•");
    MATH_SYMBOLS.add("‚à¶");
    MATH_SYMBOLS.add("‚ãï");
    MATH_SYMBOLS.add("#");
    MATH_SYMBOLS.add("‚âÄ");
    MATH_SYMBOLS.add("‚ÜØ");
    MATH_SYMBOLS.add("‚Äª");
    MATH_SYMBOLS.add("‚äï");
    MATH_SYMBOLS.add("‚äª");
    MATH_SYMBOLS.add("‚ñ°");

    // Letter-based-symbols
    MATH_SYMBOLS.add("‚Ä¢");
    MATH_SYMBOLS.add("‚àÄ");
    MATH_SYMBOLS.add("‚ÑÇ");
    MATH_SYMBOLS.add("ùî†");
    MATH_SYMBOLS.add("‚àÇ");
    MATH_SYMBOLS.add("ùîº");
    MATH_SYMBOLS.add("‚àÉ");
    MATH_SYMBOLS.add("‚àà");
    MATH_SYMBOLS.add("‚àâ");
    MATH_SYMBOLS.add("‚àã");
    MATH_SYMBOLS.add("‚Ñç");
    MATH_SYMBOLS.add("‚Ñï");
    MATH_SYMBOLS.add("‚àò");
    MATH_SYMBOLS.add("‚Ñô");
    MATH_SYMBOLS.add("‚Ñö");
    MATH_SYMBOLS.add("«´");
    MATH_SYMBOLS.add("‚Ñù");
    MATH_SYMBOLS.add("‚Ä†");
    MATH_SYMBOLS.add("‚ä§");
    MATH_SYMBOLS.add("‚ä•");
    MATH_SYMBOLS.add("‚à™");
    MATH_SYMBOLS.add("‚à©");
    MATH_SYMBOLS.add("‚à®");
    MATH_SYMBOLS.add("‚àß");
    MATH_SYMBOLS.add("√ó");
    MATH_SYMBOLS.add("‚äó");
    MATH_SYMBOLS.add("‚ãâ");
    MATH_SYMBOLS.add("‚ãä");
    MATH_SYMBOLS.add("‚ãà");
    MATH_SYMBOLS.add("‚Ñ§");

    MATH_SYMBOLS.add("Œ±");
    MATH_SYMBOLS.add("Œ≤");
    MATH_SYMBOLS.add("Œ≥");
    MATH_SYMBOLS.add("Œî");
    MATH_SYMBOLS.add("Œ¥");
    MATH_SYMBOLS.add("Œµ");
    MATH_SYMBOLS.add("Œ∑");
    MATH_SYMBOLS.add("Œª");
    MATH_SYMBOLS.add("Œº");
    MATH_SYMBOLS.add("œÄ");
    MATH_SYMBOLS.add("œÅ");
    MATH_SYMBOLS.add("œÉ");
    MATH_SYMBOLS.add("Œ£");
    MATH_SYMBOLS.add("œÑ");
    MATH_SYMBOLS.add("œÜ");
    MATH_SYMBOLS.add("œá");
    MATH_SYMBOLS.add("Œ¶");
    MATH_SYMBOLS.add("œâ");
    MATH_SYMBOLS.add("Œ©");
    
    // Words
    MATH_SYMBOLS.add("const");
    MATH_SYMBOLS.add("cos");
    MATH_SYMBOLS.add("dx");
    MATH_SYMBOLS.add("exp");
    MATH_SYMBOLS.add("for");
    MATH_SYMBOLS.add("lim");
    MATH_SYMBOLS.add("ln");
    MATH_SYMBOLS.add("log");
    MATH_SYMBOLS.add("max");
    MATH_SYMBOLS.add("min");
    MATH_SYMBOLS.add("otherwise");
    MATH_SYMBOLS.add("sin");
    MATH_SYMBOLS.add("tan");
  }

  public static boolean containsMathSymbol(String str) {
    for (char character : str.toCharArray()) {
      if (isMathSymbol(character)) {
        return true;
      }
    }
    return false;
  }
  
  public static boolean isMathSymbol(char symbol) {
    return isMathSymbol(String.valueOf(symbol));
  }
  
  public static boolean isMathSymbol(String symbol) {
    return MATH_SYMBOLS.contains(symbol);
  }
}
